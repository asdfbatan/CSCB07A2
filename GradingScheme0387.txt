==== A2 phase I marking ====
Your assignment is marked by:
Stephen Luc, stephen.luc@mail.utoronto.ca

Group number:0387
UTORID members:Sujeffer, xiatia18,zhan5263,lamyuk1
Total deductions:12
Grade:F

Your team's Phase II grade is based on this scale:

    http://www.artsci.utoronto.ca/newstudents/transition/academic/grading

The way we graded is as follows: your team starts with an A+. When errors and
problems are found, you will lose 0, 1, 2, or 3 letter steps, depending on the
severity. As an example, if you lost two steps, your team would earn an A-:

     A+ -> A
     A -> A-

You were asked to follow the Scrum process. A big part of that is to maintain
a product backlog and a sprint backlog.

==== Product and Sprint backlogs ==== [up to -6]

Several steps can be lost for these kinds of issues:

- [ ]   No evidence of Product or Sprint backlog -6
- [ ]   No evidence of team assigning tasks to team members -3
- [ ]   SB items not taken directly from PB -1
- [x]   SB items not broken down into smaller steps -1
- [ ]   PB, SB uses noticeably bad grammar and/or spelling -2
TA COMMENTS: 
All items, except user story k and z, in SB aren’t broken down
[Total deductions in this section: -1]

==== Java Style ==== [up to -6]

Steps can be lost for these kinds of issues:

- [x]     Java naming conventions not followed (camelCase, no_underscores) -1
- [ ]     Instance variable names not meaningful (e.g., "Label1" is not a good name) -1
- [ ]     Bad indentation -1
- [ ]     Lack of consistency in style across files -1
- [ ]     Bad use of whitespace: too much or too little -1
- [ ]     Class names are frequently not noun phrases -1
- [ ]     Method names are frequently not verb phrases -1
- [ ]     Not following the 80character column width limit. -1
TA COMMENTS: 
History and Controller use snake_case
[Total deductions in this section: -1]

==== Design ==== [up to -6]

Several steps can be lost for these kinds of issues:

- [ ]     public instance variables instead of setters and getters -1 to -2
- [ ]     not a good breakdown of classes and methods (everything static;) -1
- [x]     long methods exist (more than roughly 30 lines from brace to brace) -1
- [ ]     hard to add new commands -1
- [ ]     no unified path handling mechanism -2
- [x]     redirection doesn't easily incorporate new commands -2
TA COMMENTS: 
Controller,
redirection only works for echo
[Total deductions in this section: -3]

==== Javadoc ==== [up to -3]

Several steps can be lost for these kinds of issues:

- [x]     Missing Javadoc on methods -1 for infrequent problems, up to -3 for frequent
- [x]     Missing Javadoc on class -1
- [x]     No Javadoc on instance vars -1
- [x]     Missing use @param and @return tags -1
- [ ]     Unclear English: bad grammar, bad spelling up to -2
TA COMMENTS: 
Command class can be made abstract
Cat, Cd, Exit, File, JShell, Ls has no class Javadocs
Directory, Cd, Exit, Man, Pushd, popd has no method javadocs
Directory, has no Javadoc on instance vars
Cat, Directory, Cd, Exit, Man, Pushd, popd javadocs don’t have @param and @return tags [Total deductions in this section: -3]

==== Correctness ==== [up to -6]

- [ ]     Code doesn't compile without modification (if the fix is simple) -1
- [x]     Code that is complete (from the SB) doesn't work completely: up to -2
- [ ]     Code crashes: -3
- [x]     Each missing/incomplete feature -1
TA COMMENTS: 
Failed test cases [6]:
1. Ls a folder
Input:
ls a
Expected Output:
b
Actual Output:
no a in directory

2. History with correct arg
Input:
History 1
Expected Output:
History 1
Actual Output:
(No output)

3. History with incorrect arg
Input:
History -1
Expected Output:
(Error message)
Actual Output:
(No output)

4. Echo to overwrite file
Input: 
echo "hello, this is a long text" > textFile
Error:
Does not create a file

5. Echo to append file
Input: 
echo "hello, this is a long text" >> textFile
Error:
Does not create a file

6. Man incorrect command
Input:
Man apt
Expected Output:
(Error message)
Actual Output:
(No output)

[Total deductions in this section: -4]
